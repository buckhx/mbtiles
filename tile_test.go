package mbtiles

import (
	"crypto/rand"
	"testing"
)

func TestSniffType(t *testing.T) {
	var sniffs = []struct {
		in   []byte
		want Format
	}{
		{[]byte{}, EMPTY},
		{[]byte{0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A}, PNG},
		{[]byte{0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0xFF, 0xFF}, PNG},
		{[]byte{0xFF, 0xD8, 0xFF, 0xD9}, JPG},
		{[]byte{0xFF, 0xD8, 0x00, 0xFF, 0xD9}, JPG},
		{[]byte{0x47, 0x49, 0x46, 0x38, 0x39, 0x61}, GIF},
		{[]byte{0x47, 0x49, 0x46, 0x38, 0x37, 0x61, 0x00}, GIF},
		{[]byte{0x52, 0x49, 0x46, 0x46, 0x00, 0x00, 0x00, 0x00, 0x57, 0x45, 0x42, 0x50}, WEBP},
		{[]byte{0x52, 0x49, 0x46, 0x46, 0x00, 0x00, 0x00, 0x00, 0x57, 0x45, 0x42, 0x50, 0x00}, WEBP},
		{[]byte{0x78, 0x9C}, PBF_DF},
		{[]byte{0x78, 0x9C, 0x00}, PBF_DF},
		{[]byte{0x1F, 0x8B}, PBF_GZ},
		{[]byte{0x1F, 0x8B, 0x00}, PBF_GZ},
		{[]byte{0x00}, UNKNOWN},
		{generateRandomBytes(10), UNKNOWN},
	}
	for i, sniff := range sniffs {
		sniffed := (&Tile{0, 0, 0, sniff.in}).SniffFormat()
		if sniffed != sniff.want {
			t.Errorf("%d SniffFormat() wanted %s, got %s", i, sniff.want, sniffed)
		}
	}
}

func generateRandomBytes(n int) []byte {
	b := make([]byte, n)
	_, err := rand.Read(b)
	if err != nil {
		panic(err)
	}
	return b
}
